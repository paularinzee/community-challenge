version: 2.1

orbs:
  sam: circleci/aws-sam-serverless@3.1.0
  

commands:
  # destroy-cluster:
  #   description: Destroy EKS Cluster.
  #   steps:
  #     - run:
  #         name: Destroy environments
  #         when: on_fail
  #         command: |
  #           eksctl delete cluster --name udagram

  # install-kubectl-and-eksctl:
  #   description: install kubectl and eksctl
  #   steps:
  #     - run:
  #         name: Installing kubectl and eksctl
  #         command: |
  #                 yum install tar gzip -y
  #                 curl --silent --location -o /usr/local/bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
  #                 chmod +x /usr/local/bin/kubectl
  #                 mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
  #                 kubectl version --client
          
  #                 curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
  #                 mv /tmp/eksctl /usr/local/bin
  #                 eksctl version
jobs:
  
  
  test-backend:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - run:
          name: install Flask dependencies
          command: |
            cd backend
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: run flask tests
          command: |
            cd backend
            pip install pytest pytest-cov
            pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  build-and-push-backend-image:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build backend image
          command: |
            cd backend
            docker build -t paularinze/flask-backend:v1 .
            echo $DOCKER_PASSWORD | docker login -u paularinze --password-stdin
            docker push paularinze/django-backend:v1

  build-and-push-frontend-image:
    docker:
      - image: circleci/node:18.18
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build frontend image
          command: |
            cd frontend
            docker build -t paularinze/vue-frontend:v1 .
            echo $DOCKER_PASSWORD | docker login -u paularinze --password-stdin
            docker push paularinze/vue-frontend:v1
  # create-eks-cluster-app:
  #   docker:
  #     - image: amazon/aws-cli
  #   steps:
  #     - checkout
  #     - install-kubectl-and-eksctl
  #     - run:
  #         name: Creating K8S cluster
  #         command: |
  #                 echo
  #                 eksctl create cluster \
  #                 --name udagram \
  #                 --region us-east-1 \
  #                 --with-oidc \
  #                 --ssh-access \
  #                 --ssh-public-key udacity
  #                 kubectl get nodes -o wide
  #                 kubectl create namespace node-namespace
  #                 aws eks update-kubeconfig --name udagram --region us-east-1
  #     - run:
  #         name: Deploying version_1
  #         command: |
  #             kubectl apply -f version_1.yml
  #     - destroy-cluster

  # smoke-test-v1:
  #   docker:
  #     - image: amazon/aws-cli
  #   steps:
  #     - checkout
  #     - install-kubectl-and-eksctl
  #     - run:
  #         name: Installing dependencies
  #         command: |
  #             echo
  #             yum install jq -y
  #     - destroy-cluster

  
workflows:
  the_jobs:
    jobs:
      - test-backend
      - build-and-push-backend-image:
          requires: [test-backend]
      - build-and-push-frontend-image
      
    
    
    
    
    
  